version: '3'

services:
  config-server:
    image: springcommunity/spring-petclinic-config-server
    networks:
      network:
    volumes:
      - type: bind
        source: ./spring-petclinic-microservices-config
        target: /var/run/config
        read_only: true
    environment:
     - GIT_REPO=/var/run/config
     - SPRING_PROFILES_ACTIVE=native
    restart: unless-stopped

  discovery-server:
    image: springcommunity/spring-petclinic-discovery-server
    networks:
      network:
    depends_on:
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    restart: unless-stopped

  customers-service:
    image: springcommunity/spring-petclinic-customers-service
    networks:
      network:
    depends_on:
     - config-server
     - discovery-server
     - mysql-service
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    environment:
     - SPRING_PROFILES_ACTIVE=docker,mysql
    restart: unless-stopped

  visits-service:
    image: springcommunity/spring-petclinic-visits-service
    networks:
      network:
    depends_on:
     - config-server
     - discovery-server
     - mysql-service
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    environment:
     - SPRING_PROFILES_ACTIVE=docker,mysql
    restart: unless-stopped

  vets-service:
    image: springcommunity/spring-petclinic-vets-service
    networks:
      network:
    depends_on:
     - config-server
     - discovery-server
     - mysql-service
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    environment:
     - SPRING_PROFILES_ACTIVE=docker,mysql
    restart: unless-stopped

  api-gateway:
    image: springcommunity/spring-petclinic-api-gateway
    networks:
      network:
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
     - "127.0.0.1:8088:8080"
    restart: unless-stopped

  tracing-server:
    image: openzipkin/zipkin
    networks:
      network:
    environment:
    - JAVA_OPTS=-XX:+UnlockExperimentalVMOptions -Djava.security.egd=file:/dev/./urandom
    restart: unless-stopped

  admin-server:
    image: springcommunity/spring-petclinic-admin-server
    networks:
      network:
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "org.springframework.boot.loader.JarLauncher"]
    # ports:
     # - "127.0.0.1:8089:9090"
    restart: unless-stopped

  mysql-service:
    image: mysql:5.7.8
    networks:
      network:
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    restart: unless-stopped

  ## Grafana / Prometheus

  grafana-server:
    build: ./docker/grafana
    networks:
      network:
    ports:
    - "127.0.0.1:8087:3000"
    restart: unless-stopped

  prometheus-server:
    build: ./docker/prometheus
    networks:
      network:
    restart: unless-stopped

networks:
  network:
